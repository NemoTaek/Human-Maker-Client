[{"/home/jht/codestates/HumanMaker-client/client/src/component/mypage/changePassword/ChangePassword.js":"1","/home/jht/codestates/HumanMaker-client/client/src/component/goal/Goal.js":"2","/home/jht/codestates/HumanMaker-client/client/src/component/mypage/chronicles/Chronicles.js":"3","/home/jht/codestates/HumanMaker-client/client/src/index.js":"4","/home/jht/codestates/HumanMaker-client/client/src/component/nav/Nav.js":"5","/home/jht/codestates/HumanMaker-client/client/src/component/signin/Signin.js":"6"},{"size":6109,"mtime":1608444012324,"results":"7","hashOfConfig":"8"},{"size":10261,"mtime":1608444047487,"results":"9","hashOfConfig":"8"},{"size":2056,"mtime":1608445006722,"results":"10","hashOfConfig":"8"},{"size":929,"mtime":1608442220305,"results":"11","hashOfConfig":"8"},{"size":2998,"mtime":1608444012340,"results":"12","hashOfConfig":"8"},{"size":7656,"mtime":1608300363104,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1q1vuft",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/home/jht/codestates/HumanMaker-client/client/src/component/mypage/changePassword/ChangePassword.js",["30"],"/home/jht/codestates/HumanMaker-client/client/src/component/goal/Goal.js",["31","32","33","34"],"/home/jht/codestates/HumanMaker-client/client/src/component/mypage/chronicles/Chronicles.js",["35"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from \"axios\"\nimport './Chronicles.css'\nimport cloud1 from \"../../../img/cloud1.png\"\nimport middleCloud from \"../../../img/middlecloud.png\"\n\nfunction Chronicles() {\n\n  const rememberId = useSelector(state => state.User.id);\n  const [userData, setUserData] = useState([])\n\n  useEffect(() => {\n    axios.get('https://humanmaker.ml/mypage/myTodoLists', {\n      params: {\n        id: rememberId\n      }\n    }).then(res => {\n      setUserData(res.data)\n    }).catch(err => {\n      console.log(err)\n    })\n  }, [])\n\n  console.log(userData);\n  return (\n\n    <div className=\"chron_container\" >\n\n      <div className=\"middlecloud_wrap\">\n        <img className=\"middlecloud\" src={middleCloud} alt=\"\" />\n      </div>\n\n      <div className=\"chron_wrap\">\n\n        <div className=\"chron_name\">\n          <p>나의 연대기</p>\n        </div>\n        <div className=\"chron_box_container\">\n\n          {userData !== '완료된 todo 리스트가 없음' ? (\n            <table className=\"chron_table\">\n\n              <thead>\n                <tr>\n                  <th>시작일</th>\n                  <th>종료일</th>\n                  <th>목표</th>\n                  <th>달성률(%)</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {userData.map(data => (\n                  <tr>\n                    <td key={data.userId}>{data.startDate}</td>\n                    <td key={data.userId}>{data.endDate}</td>\n                    <td key={data.userId}>{data.goal}</td>\n                    <td key={data.userId}>{data.progress}%</td>\n                  </tr>\n                ))}\n              </tbody>\n\n            </table>\n          ) : (\n              <div>\n                <p>데이터가 없습니다.</p>\n              </div>\n            )}\n\n\n        </div>\n      </div>\n\n      <div className=\"cloud1_wrap\">\n        <img className=\"cloud\" src={cloud1} alt=\"\" />\n      </div>\n\n    </div>\n  );\n\n}\n\nexport default Chronicles;","/home/jht/codestates/HumanMaker-client/client/src/index.js",["36","37"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport { persistStore, persistReducer } from \"redux-persist\"\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from \"./modules\"\nimport logger from 'redux-logger';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst enhancedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(enhancedReducer);\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n",["38","39"],"/home/jht/codestates/HumanMaker-client/client/src/component/nav/Nav.js",[],["40","41"],"/home/jht/codestates/HumanMaker-client/client/src/component/signin/Signin.js",["42","43","44"],{"ruleId":"45","severity":1,"message":"46","line":29,"column":6,"nodeType":"47","endLine":29,"endColumn":17,"suggestions":"48"},{"ruleId":"45","severity":1,"message":"49","line":27,"column":18,"nodeType":"50","endLine":27,"endColumn":32},{"ruleId":"45","severity":1,"message":"51","line":28,"column":22,"nodeType":"50","endLine":28,"endColumn":40},{"ruleId":"45","severity":1,"message":"52","line":29,"column":22,"nodeType":"50","endLine":29,"endColumn":40},{"ruleId":"45","severity":1,"message":"53","line":30,"column":22,"nodeType":"50","endLine":30,"endColumn":40},{"ruleId":"45","severity":1,"message":"54","line":23,"column":6,"nodeType":"47","endLine":23,"endColumn":8,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":6,"column":23,"nodeType":"58","messageId":"59","endLine":6,"endColumn":38},{"ruleId":"56","severity":1,"message":"60","line":12,"column":8,"nodeType":"58","messageId":"59","endLine":12,"endColumn":14},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"45","severity":1,"message":"67","line":52,"column":5,"nodeType":"47","endLine":52,"endColumn":14,"suggestions":"68"},{"ruleId":"45","severity":1,"message":"69","line":57,"column":5,"nodeType":"47","endLine":57,"endColumn":14,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":147,"column":8,"nodeType":"50","messageId":"73","endLine":147,"endColumn":9,"fix":"74"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rememberPw'. Either include it or remove the dependency array.","ArrayExpression",["75"],"Assignments to the 'goal' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'subgoal1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'subgoal2' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'subgoal3' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'rememberId'. Either include it or remove the dependency array.",["76"],"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'logger' is defined but never used.","no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],"React Hook useEffect has missing dependencies: 'props.isRememberId' and 'props.rememberId'. Either include them or remove the dependency array.",["79"],"React Hook useEffect has a missing dependency: 'naverLogin'. Either include it or remove the dependency array.",["80"],"dot-location","Expected dot to be on same line as property.","expectedDotBeforeProperty",{"range":"81","text":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},[3518,3523],"\n\t\t\t.","Update the dependencies array to be: [currentPw, rememberPw]",{"range":"91","text":"92"},"Update the dependencies array to be: [rememberId]",{"range":"93","text":"94"},"Update the dependencies array to be: [display, props.isRememberId, props.rememberId]",{"range":"95","text":"96"},"Update the dependencies array to be: [display, naverLogin]",{"range":"97","text":"98"},[885,896],"[currentPw, rememberPw]",[612,614],"[rememberId]",[1204,1213],"[display, props.isRememberId, props.rememberId]",[1277,1286],"[display, naverLogin]"]